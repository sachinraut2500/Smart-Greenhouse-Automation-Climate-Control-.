# -*- coding: utf-8 -*-
"""Smart Greenhouse Automation (Climate Control) üå±üè†.

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CEo7FKOrRJUiQ__kUVIKY5HE8EXWizH2
"""

"""
Smart Greenhouse IoT System üå±üè†
--------------------------------
- ESP32 Node: Reads DHT22, CO2 sensor, LDR (light sensor)
- Raspberry Pi Gateway: Receives sensor data, logs, sends alerts
- Actuators: Fan, Heater, Grow Lights (via relays)
- Communication: MQTT (test.mosquitto.org)
"""

# ====================================================
# === ESP32 (MicroPython) Code - greenhouse_node.py
# ====================================================

import machine, time
import network
from umqtt.simple import MQTTClient
import dht

BROKER = "test.mosquitto.org"
TOPIC = b"greenhouse/data"

dht_sensor = dht.DHT22(machine.Pin(14))       # Temp & Humidity
ldr = machine.ADC(machine.Pin(34))            # Light sensor
co2_sensor = machine.ADC(machine.Pin(35))     # Simulated CO2 (replace with real sensor driver)

# Actuators
fan = machine.Pin(25, machine.Pin.OUT)
heater = machine.Pin(26, machine.Pin.OUT)
light = machine.Pin(27, machine.Pin.OUT)

def connect_wifi():
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect("your-SSID", "your-PASSWORD")
    while not wlan.isconnected():
        time.sleep(1)
    print("‚úÖ WiFi Connected")

def main():
    connect_wifi()
    client = MQTTClient("greenhouse-node", BROKER)
    client.connect()
    print("üì° Connected to MQTT broker")

    while True:
        dht_sensor.measure()
        temp = dht_sensor.temperature()
        hum = dht_sensor.humidity()
        co2 = co2_sensor.read()
        lux = ldr.read()

        data = f"{temp},{hum},{co2},{lux}"
        client.publish(TOPIC, data)
        print("Sent:", data)

        # Local Control
        if temp > 30:
            fan.value(1)
        else:
            fan.value(0)

        if temp < 18:
            heater.value(1)
        else:
            heater.value(0)

        if lux < 1000:
            light.value(1)
        else:
            light.value(0)

        time.sleep(10)

main()


# ====================================================
# === Raspberry Pi / Cloud Gateway - greenhouse_gateway.py
# ====================================================

import paho.mqtt.client as mqtt
import csv
import time

BROKER = "test.mosquitto.org"
TOPIC = "greenhouse/data"
LOGFILE = "greenhouse_log.csv"

def on_connect(client, userdata, flags, rc):
    print("‚úÖ Connected to MQTT Broker")
    client.subscribe(TOPIC)

def on_message(client, userdata, msg):
    temp, hum, co2, lux = msg.payload.decode().split(",")
    temp, hum, co2, lux = float(temp), float(hum), int(co2), int(lux)
    print(f"üì• Data - Temp:{temp}¬∞C | Hum:{hum}% | CO2:{co2}ppm | Lux:{lux}")

    # Save to CSV
    with open(LOGFILE, "a") as f:
        writer = csv.writer(f)
        writer.writerow([time.time(), temp, hum, co2, lux])

    # Alerts
    if temp > 35:
        print("‚ö†Ô∏è ALERT: Overheating! Ventilation required.")
    if co2 > 1200:
        print("‚ö†Ô∏è ALERT: High CO2 levels!")

client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message
client.connect(BROKER, 1883, 60)
client.loop_forever()